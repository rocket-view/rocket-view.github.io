{"version":3,"sources":["mqtt.js","dataviews/DataView.js","Connect.js","ContextMenu.js","dataviews/Label.js","dataviews/Graph.js","dataviews/Button.js","MainContainer.js","dataviews/TextInput.js","App.js","serviceWorker.js","index.js"],"names":["client","mouseX","mouseY","Paho","MQTT","_MQTT","connectListeners","subscriptions","mqtt","connect","server","username","password","port","clientId","ssl","Client","onMessageArrived","msg","destinationName","forEach","callback","payloadString","timeout","userName","cleanSession","useSSL","onSuccess","func","onFailure","e","alert","concat","errorCode","errorMessage","addConnectListener","push","removeConnectListener","idx","indexOf","splice","subscribe","topic","unsubscribe","length","publish","send","alphabet","Connect","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","charAt","Math","floor","random","state","handleServerChange","bind","assertThisInitialized","handleUsernameChange","handlePasswordChange","handlePortChange","handleClientChange","handleSslChange","handleSubmit","ev","setState","target","value","checked","preventDefault","form","checkValidity","parseInt","react_default","a","createElement","className","action","onSubmit","htmlFor","name","type","required","onChange","min","max","minLength","maxLength","onClick","React","Component","document","addEventListener","clientX","clientY","DataView","handleDragStart","left","right","top","bottom","onResize","x","round","body","clientWidth","y","clientHeight","l","r","t","b","dataTransfer","setData","onContextMenu","style","draggable","onDragStart","onDrag","handleDrag","children","ContextMenu","active","handleKeyUp","handleBackgroundClick","handleBtnClick","removeEventListener","prevProps","event","elements","keyCode","parentNode","ul","_this2","ref","el","map","i","key","Label","data","format","text","ctxEv","edit","editText","handlePublish","handleContextMenu","handleEditClick","handleDeleteClick","handleFinishEdit","handleEditChange","handleEditCancel","getOwnPropertyNames","str","_this3","topics","substr","formatString","updateData","clearData","stopPropagation","onDelete","onDataChange","DataView_DataView","ContextMenu_ContextMenu","split","Graph","baseTime","Date","smoothie","TimeSeries","chart","SmoothieChart","responsive","addTimeSeries","strokeStyle","fillStyle","lineWidth","streamTo","canvas","append","getTime","parseFloat","Button","editLabel","editTopic","editValue","handleEditLabelChange","handleEditTopicChange","handleEditValueChange","handleClick","cfg","JSON","parse","label","stringify","components","Textbox","TextInput","lastPublish","handleChange","MainContainer","cid","comps","size","grid","comp","handleResize","handleDelete","handleDataChange","handleAddClick","App","connected","handleConnect","MainContainer_MainContainer","Connect_Connect","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","catch","error","ReactDOM","render","App_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oTAGIA,ECCAC,EAAQC,qFDHNC,EAAO,CAAEC,YAAQC,GAGnBC,EAAmB,GACnBC,EAAgB,GA6DLC,EA3DJ,CACPC,QAAW,SAACC,EAAQC,EAAUC,EAAUC,EAAMC,EAAUC,IACpDf,EAAS,IAAIG,EAAKC,KAAKY,OAAON,EAAQG,EAAM,IAAKC,IAC1CG,iBAAmB,SAAAC,GAClBX,EAAcW,EAAIC,kBAClBZ,EAAcW,EAAIC,iBAAiBC,QAAQ,SAAAC,GACvCA,EAASH,EAAII,cAAeJ,EAAIC,oBAI5CnB,EAAOS,QAAQ,CACXc,QAAW,GACXC,SAAYb,EACZC,SAAYA,EACZa,cAAgB,EAChBC,OAAUX,EACVY,UAAa,WACTrB,EAAiBc,QAAQ,SAAAQ,GACrBA,OAGRC,UAAa,SAACC,GACVC,MAAK,cAAAC,OAAeF,EAAEG,UAAjB,MAAAD,OAA+BF,EAAEI,mBAIlDC,mBAAsB,SAAAP,GAClBtB,EAAiB8B,KAAKR,IAE1BS,sBAAyB,SAAAT,GACrB,IAAIU,EAAMhC,EAAiBiC,QAAQX,GAC/BU,GAAO,GACPhC,EAAiBkC,OAAOF,EAAK,IAGrCG,UAAa,SAACC,EAAOd,GACbrB,EAAcmC,GACdnC,EAAcmC,GAAON,KAAKR,IAE1BrB,EAAcmC,GAAS,CAAEd,GACzB5B,EAAOyC,UAAUC,EAAO,MAGhCC,YAAe,SAACD,EAAOd,GACnB,GAAIrB,EAAcmC,GAAQ,CACtB,IAAIJ,EAAM/B,EAAcmC,GAAOH,QAAQX,GACnCU,GAAO,IACP/B,EAAcmC,GAAOF,OAAOF,EAAK,GACG,IAAhC/B,EAAcmC,GAAOE,gBACdrC,EAAcmC,GACrB1C,EAAO2C,YAAYD,EAAO,QAK1CG,QAAW,SAACH,EAAOxB,GACflB,EAAO8C,KAAKJ,EAAOxB,EAAK,GAAG,KE3D7B6B,SAAW,kEAEIC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IAEN,IADA,IAAIjD,EAAS,WACNA,EAAO4C,OAAS,IACnB5C,GAAU+C,EAASU,OAAOC,KAAKC,MAAMD,KAAKE,SAAWb,EAASH,SAJnD,OAMfM,EAAKW,MAAQ,CACTnD,OAAU,YACVC,SAAY,GACZC,SAAY,GACZC,KAAQ,KACRb,OAAUA,EACVe,KAAO,GAEXmC,EAAKY,mBAAqBZ,EAAKY,mBAAmBC,KAAxBZ,OAAAa,EAAA,EAAAb,CAAAD,IAC1BA,EAAKe,qBAAuBf,EAAKe,qBAAqBF,KAA1BZ,OAAAa,EAAA,EAAAb,CAAAD,IAC5BA,EAAKgB,qBAAuBhB,EAAKgB,qBAAqBH,KAA1BZ,OAAAa,EAAA,EAAAb,CAAAD,IAC5BA,EAAKiB,iBAAmBjB,EAAKiB,iBAAiBJ,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAKkB,mBAAqBlB,EAAKkB,mBAAmBL,KAAxBZ,OAAAa,EAAA,EAAAb,CAAAD,IAC1BA,EAAKmB,gBAAkBnB,EAAKmB,gBAAgBN,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IACvBA,EAAKoB,aAAepB,EAAKoB,aAAaP,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IApBLA,kFAuBAqB,GACflB,KAAKmB,SAAS,CACV9D,OAAU6D,EAAGE,OAAOC,qDAIPH,GACjBlB,KAAKmB,SAAS,CACV7D,SAAY4D,EAAGE,OAAOC,qDAITH,GACjBlB,KAAKmB,SAAS,CACV5D,SAAY2D,EAAGE,OAAOC,iDAIbH,GACblB,KAAKmB,SAAS,CACV3D,KAAQ0D,EAAGE,OAAOC,mDAIPH,GACflB,KAAKmB,SAAS,CACVxE,OAAUuE,EAAGE,OAAOC,gDAIZH,GACZlB,KAAKmB,SAAS,CACVzD,IAAOwD,EAAGE,OAAOE,+CAIZJ,GACTA,EAAGK,iBACCL,EAAGE,OAAOI,KAAKC,iBACftE,EAAKC,QAAQ4C,KAAKQ,MAAMnD,OAAQ2C,KAAKQ,MAAMlD,SAAU0C,KAAKQ,MAAMjD,SAAUmE,SAAS1B,KAAKQ,MAAMhD,MAAOwC,KAAKQ,MAAM7D,OAAQqD,KAAKQ,MAAM9C,sCAKvI,OACIiE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,QAAME,OAAO,IAAIC,SAAUhC,KAAKiB,cAC5BU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,gCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,UAAf,WACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SAASC,KAAK,OAAOC,UAAQ,EAACf,MAAOrB,KAAKQ,MAAMnD,OAAQgF,SAAUrC,KAAKS,sBAEvFkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAf,aACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WAAWC,KAAK,OAAOd,MAAOrB,KAAKQ,MAAMlD,SAAU+E,SAAUrC,KAAKY,wBAElFe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAf,aACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WAAWC,KAAK,WAAWd,MAAOrB,KAAKQ,MAAMjD,SAAU8E,SAAUrC,KAAKa,wBAEtFc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,QAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOC,KAAK,SAASG,IAAI,IAAIC,IAAI,QAAQH,UAAQ,EAACf,MAAOrB,KAAKQ,MAAMhD,KAAM6E,SAAUrC,KAAKc,oBAEzGa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,UAAf,cACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SAASC,KAAK,OAAOK,UAAU,IAAIC,UAAU,KAAKL,UAAQ,EAACf,MAAOrB,KAAKQ,MAAM7D,OAAQ0F,SAAUrC,KAAKe,sBAEpHY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,MAAMC,KAAK,WAAWb,QAAStB,KAAKQ,MAAM9C,IAAK2E,SAAUrC,KAAKgB,kBAC1EW,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,OAAf,YAEJN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQK,KAAK,SAASO,QAAS1C,KAAKiB,cAAtD,aAGRU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBA3GMa,IAAMC,iBDA3CC,SAASC,iBAAiB,WAAY,SAAA5B,GAClCtE,EAASsE,EAAG6B,QACZlG,EAASqE,EAAG8B,cAGKC,cACjB,SAAAA,EAAYrD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,IACfpD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,KAAMJ,KACDsD,gBAAkBrD,EAAKqD,gBAAgBxC,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IAFRA,0EAKRsD,EAAMC,EAAOC,EAAKC,GACzB,GAAItD,KAAKJ,MAAM2D,SAAU,CACrB,IAAIC,EAAInD,KAAKoD,MAAM,GAAK7G,EAASiG,SAASa,KAAKC,aAC3CC,EAAIvD,KAAKoD,MAAM,GAAK5G,EAASgG,SAASa,KAAKG,cAC3CC,EAAI9D,KAAKJ,MAAMuD,KACfY,EAAI/D,KAAKJ,MAAMwD,MACfY,EAAIhE,KAAKJ,MAAMyD,IACfY,EAAIjE,KAAKJ,MAAM0D,OACfH,GACAW,EAAIN,IACK,GAAKO,IACVD,EAAI,GAAKC,EAAI,GAEVX,GAEH,IADJW,EAAI,GAAKP,IACKM,IACVC,EAAI,IAAMD,EAAI,IAGlBT,GACAW,EAAIJ,IACK,GAAKK,IACVD,EAAI,GAAKC,EAAI,GAEVX,GAEH,GAAKU,IADTC,EAAI,GAAKL,KAELK,EAAI,IAAMD,EAAI,IAGlBF,IAAM9D,KAAKJ,MAAMuD,MAAQY,IAAM/D,KAAKJ,MAAMwD,OAASY,IAAMhE,KAAKJ,MAAMyD,KAAOY,IAAMjE,KAAKJ,MAAM0D,QAC5FtD,KAAKJ,MAAM2D,SAASO,EAAGC,EAAGC,EAAGC,4CAKzB/C,GACZA,EAAGgD,aAAaC,QAAQ,aAAc,uCAItC,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYsC,cAAepE,KAAKJ,MAAMwE,cAAeC,MAAO,CACvElB,KAAA,GAAAxE,OAAW,IAAIqB,KAAKJ,MAAMuD,KAAK,GAA/B,KACAC,MAAA,GAAAzE,OAAY,IAAIqB,KAAKJ,MAAMwD,MAAM,GAAjC,KACAC,IAAA,GAAA1E,OAAU,IAAIqB,KAAKJ,MAAMyD,IAAI,GAA7B,KACAC,OAAA,GAAA3E,OAAa,IAAIqB,KAAKJ,MAAM0D,OAAO,GAAnC,OAEA3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAM,GAAO,GAAO,KACxI2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAO,GAAM,GAAO,KACzI2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAO,GAAO,GAAM,KACvI2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAO,GAAO,GAAO,KAC3I2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAM,GAAO,GAAM,KAClJ2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCAAiCwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAO,GAAM,GAAM,KACnJ2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAM,GAAO,GAAO,KACtJ2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAAoCwC,WAAS,EAACC,YAAavE,KAAKkD,gBAAiBsB,OAAQxE,KAAKyE,WAAW/D,KAAKV,MAAM,GAAO,GAAM,GAAO,KACvJ2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACV9B,KAAKJ,MAAM8E,kBA/DM/B,IAAMC,WEJvB+B,qBACjB,SAAAA,EAAY/E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2E,IACf9E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6E,GAAAxE,KAAAH,KAAMJ,KACDY,MAAQ,CACTgD,EAAK,EACLI,EAAK,EACLgB,QAAU,GAEd/E,EAAKgF,YAAchF,EAAKgF,YAAYnE,KAAjBZ,OAAAa,EAAA,EAAAb,CAAAD,IACnBA,EAAKiF,sBAAwBjF,EAAKiF,sBAAsBpE,KAA3BZ,OAAAa,EAAA,EAAAb,CAAAD,IAC7BA,EAAKkF,eAAiBlF,EAAKkF,eAAerE,KAApBZ,OAAAa,EAAA,EAAAb,CAAAD,IATPA,mFAafgD,SAASC,iBAAiB,QAAS9C,KAAK6E,4DAIxChC,SAASmC,oBAAoB,QAAShF,KAAK6E,wDAG5BI,GACf,GAAIA,EAAUC,QAAUlF,KAAKJ,MAAMsF,MAAO,CACtC,IAAI1B,EAAIxD,KAAKJ,MAAMsF,MAAMnC,QACrBa,EAAI5D,KAAKJ,MAAMsF,MAAMlC,QACrBQ,EA5BF,IA4BcX,SAASa,KAAKC,cAC1BH,GA7BF,KA+BEI,EA9BD,GA8Bc5D,KAAKJ,MAAMuF,SAAS5F,OAASsD,SAASa,KAAKG,eACxDD,EAAIf,SAASa,KAAKG,aA/BnB,GA+B2C7D,KAAKJ,MAAMuF,SAAS5F,QAElES,KAAKmB,SAAS,CACVqC,EAAKA,EACLI,EAAKA,EACLgB,QAAU,IAEd/B,SAASC,iBAAiB,QAAS9C,KAAK8E,4DAIpC5D,GACW,KAAfA,EAAGkE,SAAkBpF,KAAKQ,MAAMoE,SAChC5E,KAAKmB,SAAS,CACVyD,QAAU,IAEd/B,SAASmC,oBAAoB,QAAShF,KAAK8E,sEAI7B5D,GACdA,EAAGE,OAAOiE,aAAerF,KAAKsF,KAC9BtF,KAAKmB,SAAS,CACVyD,QAAU,IAEd/B,SAASmC,oBAAoB,QAAShF,KAAK8E,+DAIpC7F,EAAKiC,GAChBlB,KAAKmB,SAAS,CACVyD,QAAU,IAEd/B,SAASmC,oBAAoB,QAAShF,KAAK8E,uBACvC9E,KAAKJ,MAAM8C,SAAW1C,KAAKJ,MAAM8C,QAAQzD,IACzCe,KAAKJ,MAAM8C,QAAQzD,GAAKiC,oCAIvB,IAAAqE,EAAAvF,KACL,OAAOA,KAAKQ,MAAMoE,OACdjD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe0D,IAAK,SAAAC,GAAE,OAAIF,EAAKD,GAAKG,GAAIpB,MAAO,CACzDlB,KAAA,GAAAxE,OAAWqB,KAAKQ,MAAMgD,EAAtB,MACAH,IAAA,GAAA1E,OAAUqB,KAAKQ,MAAMoD,EAArB,QAEC5D,KAAKJ,MAAMuF,SAASO,IAAI,SAACD,EAAIE,GAAL,OACrBhE,EAAAC,EAAAC,cAAA,MAAI+D,IAAG,MAAAjH,OAAQgH,GAAKjD,QAAS6C,EAAKR,eAAerE,KAAK6E,EAAMI,IACvDF,MAIb9D,EAAAC,EAAAC,cAAA,mBAhF6Bc,IAAMC,YCA1BiD,qBACjB,SAAAA,EAAYjG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,IACfhG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+F,GAAA1F,KAAAH,KAAMJ,KACDY,MAAQ,CACTsF,KAAQ,GACRC,OAAU,GACVC,KAAQ,GACRC,MAAS,GACTC,MAAQ,EACRC,SAAY,IAEhBtG,EAAKuG,cAAgBvG,EAAKuG,cAAc1F,KAAnBZ,OAAAa,EAAA,EAAAb,CAAAD,IACrBA,EAAKwG,kBAAoBxG,EAAKwG,kBAAkB3F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAKyG,gBAAkBzG,EAAKyG,gBAAgB5F,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IACvBA,EAAK0G,kBAAoB1G,EAAK0G,kBAAkB7F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAK2G,iBAAmB3G,EAAK2G,iBAAiB9F,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK4G,iBAAmB5G,EAAK4G,iBAAiB/F,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK6G,iBAAmB7G,EAAK6G,iBAAiBhG,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IAhBTA,2EAmBP,IAAA0F,EAAAvF,KACRF,OAAO6G,oBAAoB3G,KAAKQ,MAAMsF,MAAM/H,QAAQ,SAAAsB,GAChDlC,EAAKmC,YAAYD,EAAOkG,EAAKa,sDAIxBN,EAAMC,GACf,IAAIa,EAAM,GAYV,OAXAb,EAAOhI,QAAQ,SAACF,EAAK8H,GACbA,EAAI,EACAG,EAAKjI,GACL+I,GAAOd,EAAKjI,GAEZ+I,GAAO,IAGXA,GAAO/I,IAGR+I,uCAOP,IAJS,IAAAC,EAAA7G,KACL8G,EAAS,GACTf,EAAS,GACTa,EAAM5G,KAAKJ,MAAMkG,KACdc,EAAIrH,OAAS,GAAG,CACnB,IAAIN,EAAM2H,EAAI1H,QAAQ,KACtB,GAAID,EAAM,EAAG,CACT8G,EAAOhH,KAAK6H,GACZ,MAEJb,EAAOhH,KAAK6H,EAAIG,OAAO,EAAG9H,IAE1BA,GADA2H,EAAMA,EAAIG,OAAO9H,EAAM,IACbC,QAAQ,KAClB,IAAIG,EAAQuH,EAAIG,OAAO,EAAG9H,GAC1B6H,EAAO/H,KAAKM,GACZ0G,EAAOhH,KAAKM,GACZuH,EAAMA,EAAIG,OAAO9H,EAAM,GAE3B6H,EAAO/I,QAAQ,SAAAsB,GACXlC,EAAKiC,UAAUC,EAAOwH,EAAKT,iBAE/BpG,KAAKmB,SAAS,CACV2E,KAAQ,GACRC,OAAUA,EACVC,KAAQhG,KAAKgH,aAAa,GAAIjB,iDAKlC/F,KAAKiH,4DAILjH,KAAKkH,uDAGUjC,GACXA,EAAUa,OAAS9F,KAAKJ,MAAMkG,OAC9B9F,KAAKkH,YACLlH,KAAKiH,oDAICpJ,EAAKwB,GACf,IAAIyG,EAAO9F,KAAKQ,MAAMuF,OACtBD,EAAKzG,GAASxB,EACdmC,KAAKmB,SAAS,CACV2E,KAAQA,EACRE,KAAQhG,KAAKgH,aAAalB,EAAM9F,KAAKQ,MAAMuF,oDAIjC7E,GACdA,EAAGK,iBACHL,EAAGiG,kBACHnH,KAAKmB,SAAS,CACV8E,MAAS,CACLlD,QAAW7B,EAAG6B,QACdC,QAAW9B,EAAG8B,QACd9B,GAAMA,+CAMdlB,KAAKmB,SAAS,CACV+E,MAAQ,EACRC,SAAYnG,KAAKJ,MAAMkG,mDAKvB9F,KAAKJ,MAAMwH,UACXpH,KAAKJ,MAAMwH,sDAKfpH,KAAKmB,SAAS,CACV+E,MAAQ,IAERlG,KAAKJ,MAAMyH,cACXrH,KAAKJ,MAAMyH,aAAarH,KAAKQ,MAAM2F,mDAI1BjF,GACblB,KAAKmB,SAAS,CACVgF,SAAYjF,EAAGE,OAAOC,mDAK1BrB,KAAKmB,SAAS,CACV+E,MAAQ,qCAKZ,OACIvE,EAAAC,EAAAC,cAACyF,EAAD,CAAUnE,KAAMnD,KAAKJ,MAAMuD,KAAMC,MAAOpD,KAAKJ,MAAMwD,MAAOC,IAAKrD,KAAKJ,MAAMyD,IAAKC,OAAQtD,KAAKJ,MAAM0D,OAAQC,SAAUvD,KAAKJ,MAAM2D,SAAUa,cAAepE,KAAKqG,mBACxJrG,KAAKQ,MAAM0F,KACRvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,kBAAkBT,MAAOrB,KAAKQ,MAAM2F,SAAU9D,SAAUrC,KAAKyG,mBACjF9E,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,OACA,SACA,UACDzC,QAAS,CACR1C,KAAKwG,iBACLxG,KAAK0G,iBACL1G,KAAKuG,sBAIb5E,EAAAC,EAAAC,cAAA,WACK7B,KAAKQ,MAAMwF,KAAKwB,MAAM,MAAM9B,IAAI,SAAClC,EAAGmC,GAAJ,OAC7BhE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQ8D,IAAKD,GAAInC,KAElC7B,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,YACA,UACDzC,QAAS,CACR1C,KAAKsG,gBACLtG,KAAKuG,8BAtKE5D,IAAMC,4BCCpB6E,qBACjB,SAAAA,EAAY7H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyH,IACf5H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2H,GAAAtH,KAAAH,KAAMJ,KACDY,MAAQ,CACTyF,MAAS,GACTC,MAAQ,EACRC,SAAY,IAEhBtG,EAAKuG,cAAgBvG,EAAKuG,cAAc1F,KAAnBZ,OAAAa,EAAA,EAAAb,CAAAD,IACrBA,EAAKwG,kBAAoBxG,EAAKwG,kBAAkB3F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAKyG,gBAAkBzG,EAAKyG,gBAAgB5F,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IACvBA,EAAK0G,kBAAoB1G,EAAK0G,kBAAkB7F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAK2G,iBAAmB3G,EAAK2G,iBAAiB9F,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK4G,iBAAmB5G,EAAK4G,iBAAiB/F,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK6G,iBAAmB7G,EAAK6G,iBAAiBhG,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IAbTA,mFAiBXG,KAAKJ,MAAMkG,KAAKvG,OAAS,GACzBpC,EAAKiC,UAAUY,KAAKJ,MAAMkG,KAAM9F,KAAKoG,eAEzCpG,KAAK0H,SAAW,IAAIC,KACpB3H,KAAK8F,KAAO,IAAI8B,IAASC,WACzB,IAAIC,EAAQ,IAAIF,IAASG,cAAc,CACnCC,YAAc,IAElBF,EAAMG,cAAcjI,KAAK8F,KAAM,CAC3BoC,YAAe,UACfC,UAAa,uBACbC,UAAa,IAEjBN,EAAMO,SAASrI,KAAKsI,OAAQ,oDAIxBtI,KAAKJ,MAAMkG,KAAKvG,OAAS,GACzBpC,EAAKmC,YAAYU,KAAKJ,MAAMkG,KAAM9F,KAAKoG,0DAI5BnB,GACXA,EAAUa,OAAS9F,KAAKJ,MAAMkG,OAC1Bb,EAAUa,KAAKvG,OAAS,GACxBpC,EAAKmC,YAAY2F,EAAUa,KAAM9F,KAAKoG,eAEtCpG,KAAKJ,MAAMkG,KAAKvG,OAAS,GACzBpC,EAAKiC,UAAUY,KAAKJ,MAAMkG,KAAM9F,KAAKoG,sDAKnCvI,GACVmC,KAAK8F,KAAKyC,QAAO,IAAIZ,MAAOa,UAAWC,WAAW5K,8CAGpCqD,GACdA,EAAGK,iBACHL,EAAGiG,kBACHnH,KAAKmB,SAAS,CACV8E,MAAS,CACLlD,QAAW7B,EAAG6B,QACdC,QAAW9B,EAAG8B,QACd9B,GAAMA,+CAMdlB,KAAKmB,SAAS,CACV+E,MAAQ,EACRC,SAAYnG,KAAKJ,MAAMkG,mDAKvB9F,KAAKJ,MAAMwH,UACXpH,KAAKJ,MAAMwH,sDAKfpH,KAAKmB,SAAS,CACV+E,MAAQ,IAERlG,KAAKJ,MAAMyH,cACXrH,KAAKJ,MAAMyH,aAAarH,KAAKQ,MAAM2F,mDAI1BjF,GACblB,KAAKmB,SAAS,CACVgF,SAAYjF,EAAGE,OAAOC,mDAK1BrB,KAAKmB,SAAS,CACV+E,MAAQ,qCAIP,IAAAX,EAAAvF,KACL,OACI2B,EAAAC,EAAAC,cAACyF,EAAD,CAAUnE,KAAMnD,KAAKJ,MAAMuD,KAAMC,MAAOpD,KAAKJ,MAAMwD,MAAOC,IAAKrD,KAAKJ,MAAMyD,IAAKC,OAAQtD,KAAKJ,MAAM0D,OAAQC,SAAUvD,KAAKJ,MAAM2D,SAAUa,cAAepE,KAAKqG,mBACzJ1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAe0D,IAAK,SAAAC,GAAE,OAAIF,EAAK+C,OAAS7C,KACzDzF,KAAKQ,MAAM0F,KACRvE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAUR,MAAOrB,KAAKQ,MAAM2F,SAAU9D,SAAUrC,KAAKyG,mBACrD9E,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,OACA,SACA,UACDzC,QAAS,CACR1C,KAAKwG,iBACLxG,KAAK0G,iBACL1G,KAAKuG,sBAIb5E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,cACA,UACDzC,QAAS,CACR1C,KAAKsG,gBACLtG,KAAKuG,+BA9HF5D,IAAMC,YCDpB8F,2BACjB,SAAAA,EAAY9I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,IACf7I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4I,GAAAvI,KAAAH,KAAMJ,KACDY,MAAQ,CACTwF,KAAQ,GACRC,MAAS,GACTC,MAAQ,EACRyC,UAAa,GACbC,UAAa,GACbC,UAAa,IAEjBhJ,EAAKwG,kBAAoBxG,EAAKwG,kBAAkB3F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAKyG,gBAAkBzG,EAAKyG,gBAAgB5F,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IACvBA,EAAK0G,kBAAoB1G,EAAK0G,kBAAkB7F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAK2G,iBAAmB3G,EAAK2G,iBAAiB9F,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK6G,iBAAmB7G,EAAK6G,iBAAiBhG,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAKiJ,sBAAwBjJ,EAAKiJ,sBAAsBpI,KAA3BZ,OAAAa,EAAA,EAAAb,CAAAD,IAC7BA,EAAKkJ,sBAAwBlJ,EAAKkJ,sBAAsBrI,KAA3BZ,OAAAa,EAAA,EAAAb,CAAAD,IAC7BA,EAAKmJ,sBAAwBnJ,EAAKmJ,sBAAsBtI,KAA3BZ,OAAAa,EAAA,EAAAb,CAAAD,IAC7BA,EAAKoJ,YAAcpJ,EAAKoJ,YAAYvI,KAAjBZ,OAAAa,EAAA,EAAAb,CAAAD,IAlBJA,iFAqBDqB,GACdA,EAAGK,iBACHL,EAAGiG,kBACHnH,KAAKmB,SAAS,CACV8E,MAAS,CACLlD,QAAW7B,EAAG6B,QACdC,QAAW9B,EAAG8B,QACd9B,GAAMA,+CAMd,GAAIlB,KAAKJ,MAAMkG,KAAKvG,OAAS,EAAG,CAC5B,IAAI2J,EAAMC,KAAKC,MAAMpJ,KAAKJ,MAAMkG,MAChC9F,KAAKmB,SAAS,CACV+E,MAAQ,EACRyC,UAAaO,EAAIG,MACjBT,UAAaM,EAAI7J,MACjBwJ,UAAaK,EAAI7H,aAGrBrB,KAAKmB,SAAS,CACV+E,MAAQ,EACRyC,UAAa,GACbC,UAAa,GACbC,UAAa,iDAMjB7I,KAAKJ,MAAMwH,UACXpH,KAAKJ,MAAMwH,sDAKfpH,KAAKmB,SAAS,CACV+E,MAAQ,IAERlG,KAAKJ,MAAMyH,cACXrH,KAAKJ,MAAMyH,aAAa8B,KAAKG,UAAU,CACnCD,MAASrJ,KAAKQ,MAAMmI,UACpBtJ,MAASW,KAAKQ,MAAMoI,UACpBvH,MAASrB,KAAKQ,MAAMqI,wDAM5B7I,KAAKmB,SAAS,CACV+E,MAAQ,kDAIMhF,GAClBlB,KAAKmB,SAAS,CACVwH,UAAazH,EAAGE,OAAOC,sDAITH,GAClBlB,KAAKmB,SAAS,CACVyH,UAAa1H,EAAGE,OAAOC,sDAITH,GAClBlB,KAAKmB,SAAS,CACV0H,UAAa3H,EAAGE,OAAOC,8CAK3B,GAAIrB,KAAKJ,MAAMkG,KAAKvG,OAAS,EAAG,CAC5B,IAAI2J,EAAMC,KAAKC,MAAMpJ,KAAKJ,MAAMkG,MAChC3I,EAAKqC,QAAQ0J,EAAI7J,MAAO6J,EAAI7H,yCAKhC,OACIM,EAAAC,EAAAC,cAACyF,EAAD,CAAUnE,KAAMnD,KAAKJ,MAAMuD,KAAMC,MAAOpD,KAAKJ,MAAMwD,MAAOC,IAAKrD,KAAKJ,MAAMyD,IAAKC,OAAQtD,KAAKJ,MAAM0D,OAAQC,SAAUvD,KAAKJ,MAAM2D,SAAUa,cAAepE,KAAKqG,mBACxJrG,KAAKQ,MAAM0F,KACRvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,QAAME,OAAO,KACTJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,UACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQC,KAAK,OAAOC,UAAQ,EAACf,MAAOrB,KAAKQ,MAAMmI,UAAWtG,SAAUrC,KAAK8I,yBAEzFnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,UACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQC,KAAK,OAAOC,UAAQ,EAACf,MAAOrB,KAAKQ,MAAMoI,UAAWvG,SAAUrC,KAAK+I,yBAEzFpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,YACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQC,KAAK,OAAOC,UAAQ,EAACf,MAAOrB,KAAKQ,MAAMqI,UAAWxG,SAAUrC,KAAKgJ,0BAG7FrH,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,OACA,SACA,UACDzC,QAAS,CACR1C,KAAKwG,iBACLxG,KAAK0G,iBACL1G,KAAKuG,sBAIb5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcY,QAAS1C,KAAKiJ,aACtCjJ,KAAKJ,MAAMkG,KAAKvG,OAAS,GAAK4J,KAAKC,MAAMpJ,KAAKJ,MAAMkG,MAAMuD,MAAM7B,MAAM,MAAM9B,IAAI,SAAClC,EAAGmC,GAAJ,OAC7EhE,EAAAC,EAAAC,cAAA,KAAG+D,IAAKD,GAAInC,KAEhB7B,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,YACA,UACDzC,QAAS,CACR1C,KAAKsG,gBACLtG,KAAKuG,8BA9IG5D,IAAMC,YCEpC2G,SAAa,CACf1D,MAASA,EACT4B,MAASA,EACTiB,OAAUA,EACVc,oBCHA,SAAAC,EAAY7J,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyJ,IACf5J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2J,GAAAtJ,KAAAH,KAAMJ,KACDY,MAAQ,CACTwF,KAAQ,GACRC,MAAS,GACTC,MAAQ,EACRC,SAAY,IAEhBtG,EAAK6J,YAAc,IAAI/B,KAAK,GAC5B9H,EAAKuG,cAAgBvG,EAAKuG,cAAc1F,KAAnBZ,OAAAa,EAAA,EAAAb,CAAAD,IACrBA,EAAKwG,kBAAoBxG,EAAKwG,kBAAkB3F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAKyG,gBAAkBzG,EAAKyG,gBAAgB5F,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IACvBA,EAAK0G,kBAAoB1G,EAAK0G,kBAAkB7F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IACzBA,EAAK2G,iBAAmB3G,EAAK2G,iBAAiB9F,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK4G,iBAAmB5G,EAAK4G,iBAAiB/F,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK6G,iBAAmB7G,EAAK6G,iBAAiBhG,KAAtBZ,OAAAa,EAAA,EAAAb,CAAAD,IACxBA,EAAK8J,aAAe9J,EAAK8J,aAAajJ,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IAhBLA,mFAoBXG,KAAKJ,MAAMkG,KAAKvG,OAAS,GACzBpC,EAAKiC,UAAUY,KAAKJ,MAAMkG,KAAM9F,KAAKoG,8DAKrCpG,KAAKJ,MAAMkG,KAAKvG,OAAS,GACzBpC,EAAKmC,YAAYU,KAAKJ,MAAMkG,KAAM9F,KAAKoG,0DAI5BnB,GACXA,EAAUa,OAAS9F,KAAKJ,MAAMkG,OAC1Bb,EAAUa,KAAKvG,OAAS,GACxBpC,EAAKmC,YAAY2F,EAAUa,KAAM9F,KAAKoG,eAEtCpG,KAAKJ,MAAMkG,KAAKvG,OAAS,GACzBpC,EAAKiC,UAAUY,KAAKJ,MAAMkG,KAAM9F,KAAKoG,sDAKnCvI,GACN,IAAI8J,KAAS3H,KAAK0J,YA9CP,KA+CX1J,KAAKmB,SAAS,CACV6E,KAAQnI,8CAKFqD,GACdA,EAAGK,iBACHL,EAAGiG,kBACHnH,KAAKmB,SAAS,CACV8E,MAAS,CACLlD,QAAW7B,EAAG6B,QACdC,QAAW9B,EAAG8B,QACd9B,GAAMA,+CAMdlB,KAAKmB,SAAS,CACV+E,MAAQ,EACRC,SAAYnG,KAAKJ,MAAMkG,mDAKvB9F,KAAKJ,MAAMwH,UACXpH,KAAKJ,MAAMwH,sDAKfpH,KAAKmB,SAAS,CACV+E,MAAQ,IAERlG,KAAKJ,MAAMyH,cACXrH,KAAKJ,MAAMyH,aAAarH,KAAKQ,MAAM2F,mDAI1BjF,GACblB,KAAKmB,SAAS,CACVgF,SAAYjF,EAAGE,OAAOC,mDAK1BrB,KAAKmB,SAAS,CACV+E,MAAQ,yCAIHhF,GACTlB,KAAKmB,SAAS,CACV6E,KAAQ9E,EAAGE,OAAOC,QAElBrB,KAAKJ,MAAMkG,KAAKvG,OAAS,IACzBS,KAAK0J,YAAc,IAAI/B,KACvBxK,EAAKqC,QAAQQ,KAAKJ,MAAMkG,KAAM5E,EAAGE,OAAOC,yCAK5C,OACIM,EAAAC,EAAAC,cAACyF,EAAD,CAAUnE,KAAMnD,KAAKJ,MAAMuD,KAAMC,MAAOpD,KAAKJ,MAAMwD,MAAOC,IAAKrD,KAAKJ,MAAMyD,IAAKC,OAAQtD,KAAKJ,MAAM0D,OAAQC,SAAUvD,KAAKJ,MAAM2D,SAAUa,cAAepE,KAAKqG,mBACxJrG,KAAKQ,MAAM0F,KACRvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,kBAAkBT,MAAOrB,KAAKQ,MAAM2F,SAAU9D,SAAUrC,KAAKyG,mBACjF9E,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,OACA,SACA,UACDzC,QAAS,CACR1C,KAAKwG,iBACLxG,KAAK0G,iBACL1G,KAAKuG,sBAIb5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,kBAAkBT,MAAOrB,KAAKQ,MAAMwF,KAAM3D,SAAUrC,KAAK2J,eAC7EhI,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAU,CAC5C,aACA,UACDzC,QAAS,CACR1C,KAAKsG,gBACLtG,KAAKuG,8BAnIM5D,IAAMC,aDSxBgH,cACjB,SAAAA,EAAYhK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4J,IACf/J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8J,GAAAzJ,KAAAH,KAAMJ,KACDY,MAAQ,CACT+I,WAAc,GACdtD,MAAS,IAEbpG,EAAKuG,cAAgBvG,EAAKuG,cAAc1F,KAAnBZ,OAAAa,EAAA,EAAAb,CAAAD,IACrBA,EAAK6J,YAAc,IAAI/B,KAAK,GAC5B9H,EAAKwG,kBAAoBxG,EAAKwG,kBAAkB3F,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IARVA,mFAYf1C,EAAKiC,UAAU,6BAA8BY,KAAKoG,8DAIlDjJ,EAAKmC,YAAY,6BAA8BU,KAAKoG,qDAG1CvI,GACN,IAAI8J,KAAS3H,KAAK0J,YAvBP,KAwBX1J,KAAKmB,SAAS,CACVoI,WAAcJ,KAAKC,MAAMvL,0CAKxBgM,EAAK1G,EAAMC,EAAOC,EAAKC,GAChC,IAAIwG,EAAQ9J,KAAKQ,MAAM+I,WACvBO,EAAMD,GAAKE,KAAO,CACd5G,KAAQA,EACRC,MAASA,EACTC,IAAOA,EACPC,OAAUA,GAEdtD,KAAKmB,SAAS,CACVoI,WAAcO,IAElB9J,KAAK0J,YAAc,IAAI/B,KACvBxK,EAAKqC,QAAQ,iCAAkC2J,KAAKG,UAAUQ,yCAGrDD,GACT,IAAIC,EAAQ9J,KAAKQ,MAAM+I,WACvBO,EAAM3K,OAAO0K,EAAK,GAClB7J,KAAKmB,SAAS,CACVoI,WAAcO,IAElB9J,KAAK0J,YAAc,IAAI/B,KACvBxK,EAAKqC,QAAQ,iCAAkC2J,KAAKG,UAAUQ,6CAGjDD,EAAK/D,GAClB,IAAIgE,EAAQ9J,KAAKQ,MAAM+I,WACvBO,EAAMD,GAAK/D,KAAOA,EAClB9F,KAAKmB,SAAS,CACVoI,WAAcO,IAElB9J,KAAK0J,YAAc,IAAI/B,KACvBxK,EAAKqC,QAAQ,iCAAkC2J,KAAKG,UAAUQ,8CAGhD5I,GACdA,EAAGK,iBACHL,EAAGiG,kBACHnH,KAAKmB,SAAS,CACV8E,MAAS,CACLlD,QAAW7B,EAAG6B,QACdC,QAAW9B,EAAG8B,QACd9B,GAAMA,4CAKHiB,GACX,IAAIqB,EAAInD,KAAKoD,MAAM,GAAKzD,KAAKQ,MAAMyF,MAAMlD,QAAUF,SAASa,KAAKC,aAC7DC,EAAIvD,KAAKoD,MAAM,GAAKzD,KAAKQ,MAAMyF,MAAMjD,QAAUH,SAASa,KAAKG,cAC7DiG,EAAQ9J,KAAKQ,MAAM+I,WACvBO,EAAM/K,KAAK,CACPoD,KAAQA,EACR4H,KAAQ,CACJ5G,KAAQK,EACRJ,MAAS,GAAKI,EAAI,EAClBH,IAAOO,EACPN,OAAU,GAAKM,EAAI,GAEvBkC,KAAQ,KAEZ9F,KAAKmB,SAAS,CACVoI,WAAcO,IAElB9J,KAAK0J,YAAc,IAAI/B,KACvBxK,EAAKqC,QAAQ,iCAAkC2J,KAAKG,UAAUQ,qCAK9D,IAFK,IAAAvE,EAAAvF,KACDgK,EAAO,GACFxG,EAAI,EAAGA,EAAI,KAAMA,EACtB,IAAK,IAAII,EAAI,EAAGA,EAAI,KAAMA,EACtBoG,EAAKjL,KACD4C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8D,IAAG,QAAAjH,OAAU6E,EAAV,KAAA7E,OAAeiF,GAAKS,MAAO,CACpDlB,KAAA,GAAAxE,OAAW,IAAI6E,EAAE,GAAjB,MACAH,IAAA,GAAA1E,OAAU,IAAIiF,EAAE,GAAhB,UAKhB,IAAIkG,EAAQ,GASZ,OARA9J,KAAKQ,MAAM+I,WAAWxL,QAAQ,SAACkM,EAAMtE,GACjC,IAAI/C,EAAY2G,EAAWU,EAAK9H,MAChC2H,EAAM/K,KACF4C,EAAAC,EAAAC,cAACe,EAAD,CAAWgD,IAAG,QAAAjH,OAAUgH,GAAKG,KAAMmE,EAAKnE,KACpC3C,KAAM8G,EAAKF,KAAK5G,KAAMC,MAAO6G,EAAKF,KAAK3G,MAAOC,IAAK4G,EAAKF,KAAK1G,IAAKC,OAAQ2G,EAAKF,KAAKzG,OACpFC,SAAUgC,EAAK2E,aAAaxJ,KAAK6E,EAAMI,GAAIyB,SAAU7B,EAAK4E,aAAazJ,KAAK6E,EAAMI,GAAI0B,aAAc9B,EAAK6E,iBAAiB1J,KAAK6E,EAAMI,QAI7IhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOsC,cAAepE,KAAKqG,mBACrC2D,EACAF,EACDnI,EAAAC,EAAAC,cAAC0F,EAAD,CAAarC,MAAOlF,KAAKQ,MAAMyF,MAAOd,SAAUrF,OAAO6G,oBAAoB4C,GAAY7D,IAAI,SAAAjH,GAAC,aAAAE,OAAWF,KACnGiE,QAAS5C,OAAO6G,oBAAoB4C,GAAY7D,IAAI,SAAAjH,GAAC,OAAI8G,EAAK8E,eAAe3J,KAAK6E,EAAM9G,eA1HjEkE,IAAMC,WEZ5B0H,qBACjB,SAAAA,EAAY1K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsK,IACfzK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwK,GAAAnK,KAAAH,KAAMJ,KACDY,MAAQ,CACT+J,WAAa,GAEjB1K,EAAK2K,cAAgB3K,EAAK2K,cAAc9J,KAAnBZ,OAAAa,EAAA,EAAAb,CAAAD,IALNA,mFASf1C,EAAK2B,mBAAmBkB,KAAKwK,8DAI7BrN,EAAK6B,sBAAsBgB,KAAKwK,uDAIhCxK,KAAKmB,SAAS,CACVoJ,WAAa,qCAKjB,OACI5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACV9B,KAAKQ,MAAM+J,UAAY5I,EAAAC,EAAAC,cAAC4I,EAAD,MAAoB9I,EAAAC,EAAAC,cAAC6I,EAAD,cA1B3B/H,IAAMC,YCM1B+H,EAAcC,QACM,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DAsCZ,SAASC,EAAgBC,EAAOC,GAC5BC,UAAUC,cACLC,SAASJ,GACTK,KAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBlL,QACb4K,UAAUC,cAAcQ,YAIxBC,QAAQC,IACJ,iHAKAZ,GAAUA,EAAOa,UACjBb,EAAOa,SAASR,KAMpBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAO7M,WACjB6M,EAAO7M,UAAUkN,UAOxCS,MAAM,SAAAC,GACHJ,QAAQI,MAAM,4CAA6CA,KC3FvEC,IAASC,OAAOzK,EAAAC,EAAAC,cAACwK,EAAD,MAASxJ,SAASyJ,eAAe,SAC5CjB,GDgBE,SAAkBF,GACrB,GAA6C,kBAAmBC,UAAW,CAGvE,GADkB,IAAImB,IAAIC,GAAwB3B,OAAOC,SAAS2B,MACpDC,SAAW7B,OAAOC,SAAS4B,OAIrC,OAGJ7B,OAAO/H,iBAAiB,OAAQ,WAC5B,IAAMoI,EAAK,GAAAvM,OAAM6N,GAAN,sBAEP7B,GAgEhB,SAAiCO,EAAOC,GAEpCwB,MAAMzB,GACDK,KAAK,SAAAqB,GAEF,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEjB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAY3N,QAAQ,cAG5CkM,UAAUC,cAAc4B,MAAM1B,KAAK,SAAAC,GAC/BA,EAAa0B,aAAa3B,KAAK,WAC3BV,OAAOC,SAASqC,aAKxBlC,EAAgBC,EAAOC,KAG9Bc,MAAM,WACHH,QAAQC,IACJ,mEArFAqB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,KAAK,WAC/BO,QAAQC,IACJ,gHAMRd,EAAgBC,EAAOC,MC3CnCE","file":"static/js/main.094075a4.chunk.js","sourcesContent":["import _MQTT from \"paho.mqtt.js\";\r\nconst Paho = { \"MQTT\": _MQTT };\r\n\r\nlet client;\r\nlet connectListeners = [];\r\nlet subscriptions = {};\r\n\r\nlet mqtt = {\r\n    \"connect\": (server, username, password, port, clientId, ssl) => {\r\n        client = new Paho.MQTT.Client(server, port, \"/\", clientId);\r\n        client.onMessageArrived = msg => {\r\n            if (subscriptions[msg.destinationName]) {\r\n                subscriptions[msg.destinationName].forEach(callback => {\r\n                    callback(msg.payloadString, msg.destinationName);\r\n                });\r\n            }\r\n        };\r\n        client.connect({\r\n            \"timeout\": 10,\r\n            \"userName\": username,\r\n            \"password\": password,\r\n            \"cleanSession\": true,\r\n            \"useSSL\": ssl,\r\n            \"onSuccess\": () => {\r\n                connectListeners.forEach(func => {\r\n                    func();\r\n                });\r\n            },\r\n            \"onFailure\": (e) => {\r\n                alert(`Error code ${e.errorCode}: ${e.errorMessage}`);\r\n            }\r\n        });\r\n    },\r\n    \"addConnectListener\": func => {\r\n        connectListeners.push(func);\r\n    },\r\n    \"removeConnectListener\": func => {\r\n        let idx = connectListeners.indexOf(func);\r\n        if (idx >= 0) {\r\n            connectListeners.splice(idx, 1);\r\n        }\r\n    },\r\n    \"subscribe\": (topic, func) => {\r\n        if (subscriptions[topic]) {\r\n            subscriptions[topic].push(func);\r\n        } else {\r\n            subscriptions[topic] = [ func ];\r\n            client.subscribe(topic, {});\r\n        }\r\n    },\r\n    \"unsubscribe\": (topic, func) => {\r\n        if (subscriptions[topic]) {\r\n            let idx = subscriptions[topic].indexOf(func);\r\n            if (idx >= 0) {\r\n                subscriptions[topic].splice(idx, 1);\r\n                if (subscriptions[topic].length === 0) {\r\n                    delete subscriptions[topic];\r\n                    client.unsubscribe(topic, {});\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"publish\": (topic, msg) => {\r\n        client.send(topic, msg, 0, false);\r\n    }\r\n};\r\nexport default mqtt;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./DataView.css\";\r\n\r\nlet mouseX, mouseY;\r\n\r\ndocument.addEventListener(\"dragover\", ev => {\r\n    mouseX = ev.clientX;\r\n    mouseY = ev.clientY;\r\n});\r\n\r\nexport default class DataView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDragStart = this.handleDragStart.bind(this);\r\n    }\r\n\r\n    handleDrag(left, right, top, bottom) {\r\n        if (this.props.onResize) {\r\n            let x = Math.round(32 * mouseX / document.body.clientWidth);\r\n            let y = Math.round(18 * mouseY / document.body.clientHeight);\r\n            let l = this.props.left;\r\n            let r = this.props.right;\r\n            let t = this.props.top;\r\n            let b = this.props.bottom;\r\n            if (left) {\r\n                l = x;\r\n                if (l >= 32 - r) {\r\n                    l = 32 - r - 1;\r\n                }\r\n            } else if (right) {\r\n                r = 32 - x;\r\n                if (32 - r <= l) {\r\n                    r = 32 - (l + 1);\r\n                }\r\n            }\r\n            if (top) {\r\n                t = y;\r\n                if (t >= 18 - b) {\r\n                    t = 18 - b - 1;\r\n                }\r\n            } else if (bottom) {\r\n                b = 18 - y;\r\n                if (18 - t <= b) {\r\n                    b = 18 - (t + 1);\r\n                }\r\n            }\r\n            if (l !== this.props.left || r !== this.props.right || t !== this.props.top || b !== this.props.bottom) {\r\n                this.props.onResize(l, r, t, b);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDragStart(ev) {\r\n        ev.dataTransfer.setData(\"text/plain\", null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"data-view\" onContextMenu={this.props.onContextMenu} style={{\r\n                \"left\": `${100*this.props.left/32}%`,\r\n                \"right\": `${100*this.props.right/32}%`,\r\n                \"top\": `${100*this.props.top/18}%`,\r\n                \"bottom\": `${100*this.props.bottom/18}%`\r\n            }}>\r\n                <div className=\"handle handle-left\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, true, false, false, false)} />\r\n                <div className=\"handle handle-right\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, false, true, false, false)} />\r\n                <div className=\"handle handle-top\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, false, false, true, false)} />\r\n                <div className=\"handle handle-bottom\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, false, false, false, true)} />\r\n                <div className=\"handle handle-left handle-top\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, true, false, true, false)} />\r\n                <div className=\"handle handle-right handle-top\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, false, true, true, false)} />\r\n                <div className=\"handle handle-left handle-bottom\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, true, false, false, true)} />\r\n                <div className=\"handle handle-right handle-bottom\" draggable onDragStart={this.handleDragStart} onDrag={this.handleDrag.bind(this, false, true, false, true)} />\r\n                <div className=\"container\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDataView.propTypes = {\r\n    \"left\": PropTypes.number.isRequired,\r\n    \"right\": PropTypes.number.isRequired,\r\n    \"top\": PropTypes.number.isRequired,\r\n    \"bottom\": PropTypes.number.isRequired,\r\n    \"onResize\": PropTypes.func,\r\n    \"onContextMenu\": PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport mqtt from \"./mqtt\";\r\nimport \"./Connect.css\";\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\r\n\r\nexport default class Connect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let client = \"rocketui\";\r\n        while (client.length < 23) {\r\n            client += alphabet.charAt(Math.floor(Math.random() * alphabet.length));\r\n        }\r\n        this.state = {\r\n            \"server\": \"localhost\",\r\n            \"username\": \"\",\r\n            \"password\": \"\",\r\n            \"port\": 9001,\r\n            \"client\": client,\r\n            \"ssl\": false\r\n        };\r\n        this.handleServerChange = this.handleServerChange.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handlePortChange = this.handlePortChange.bind(this);\r\n        this.handleClientChange = this.handleClientChange.bind(this);\r\n        this.handleSslChange = this.handleSslChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleServerChange(ev) {\r\n        this.setState({\r\n            \"server\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleUsernameChange(ev) {\r\n        this.setState({\r\n            \"username\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange(ev) {\r\n        this.setState({\r\n            \"password\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handlePortChange(ev) {\r\n        this.setState({\r\n            \"port\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleClientChange(ev) {\r\n        this.setState({\r\n            \"client\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleSslChange(ev) {\r\n        this.setState({\r\n            \"ssl\": ev.target.checked\r\n        });\r\n    }\r\n\r\n    handleSubmit(ev) {\r\n        ev.preventDefault();\r\n        if (ev.target.form.checkValidity()) {\r\n            mqtt.connect(this.state.server, this.state.username, this.state.password, parseInt(this.state.port), this.state.client, this.state.ssl);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"connect\">\r\n                <div className=\"padding\" />\r\n                <div>\r\n                    <div className=\"padding\" />\r\n                    <form action=\"#\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <h1>Connect to Rocket</h1>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"server\">Server:</label>\r\n                            <input name=\"server\" type=\"text\" required value={this.state.server} onChange={this.handleServerChange} />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"username\">Username:</label>\r\n                            <input name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"password\">Password:</label>\r\n                            <input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"port\">Port:</label>\r\n                            <input name=\"port\" type=\"number\" min=\"1\" max=\"65535\" required value={this.state.port} onChange={this.handlePortChange} />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"client\">Client ID:</label>\r\n                            <input name=\"client\" type=\"text\" minLength=\"1\" maxLength=\"23\" required value={this.state.client} onChange={this.handleClientChange} />\r\n                        </div>\r\n                        <div className=\"input-group checkbox\">\r\n                            <input name=\"ssl\" type=\"checkbox\" checked={this.state.ssl} onChange={this.handleSslChange} />\r\n                            <label htmlFor=\"ssl\">Use SSL</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <button className=\"right\" type=\"submit\" onClick={this.handleSubmit}>Connect</button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"padding\" />\r\n                </div>\r\n                <div className=\"padding\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContextMenu.css\";\r\n\r\nconst WIDTH = 100;\r\nconst HEIGHT = 20;\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"x\": 0,\r\n            \"y\": 0,\r\n            \"active\": false\r\n        };\r\n        this.handleKeyUp = this.handleKeyUp.bind(this);\r\n        this.handleBackgroundClick = this.handleBackgroundClick.bind(this);\r\n        this.handleBtnClick = this.handleBtnClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keyup\", this.handleKeyUp);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keyup\", this.handleKeyUp);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.event !== this.props.event) {\r\n            let x = this.props.event.clientX;\r\n            let y = this.props.event.clientY;\r\n            if (x + WIDTH > document.body.clientWidth) {\r\n                x -= WIDTH;\r\n            }\r\n            if (y + HEIGHT * this.props.elements.length > document.body.clientHeight) {\r\n                y = document.body.clientHeight - HEIGHT * this.props.elements.length;\r\n            }\r\n            this.setState({\r\n                \"x\": x,\r\n                \"y\": y,\r\n                \"active\": true\r\n            });\r\n            document.addEventListener(\"click\", this.handleBackgroundClick);\r\n        }\r\n    }\r\n\r\n    handleKeyUp(ev) {\r\n        if (ev.keyCode === 27 && this.state.active) {\r\n            this.setState({\r\n                \"active\": false\r\n            });\r\n            document.removeEventListener(\"click\", this.handleBackgroundClick);\r\n        }\r\n    }\r\n\r\n    handleBackgroundClick(ev) {\r\n        if (ev.target.parentNode !== this.ul) {\r\n            this.setState({\r\n                \"active\": false\r\n            });\r\n            document.removeEventListener(\"click\", this.handleBackgroundClick);\r\n        }\r\n    }\r\n\r\n    handleBtnClick(idx, ev) {\r\n        this.setState({\r\n            \"active\": false\r\n        });\r\n        document.removeEventListener(\"click\", this.handleBackgroundClick);\r\n        if (this.props.onClick && this.props.onClick[idx]) {\r\n            this.props.onClick[idx](ev);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.state.active ? (\r\n            <ul className=\"context-menu\" ref={el => this.ul = el} style={{\r\n                \"left\": `${this.state.x}px`,\r\n                \"top\": `${this.state.y}px`\r\n            }}>\r\n                {this.props.elements.map((el, i) => (\r\n                    <li key={`el-${i}`} onClick={this.handleBtnClick.bind(this, i)}>\r\n                        {el}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        ) : <div />;\r\n    }\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    \"event\": PropTypes.object.isRequired,\r\n    \"elements\": PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    \"onClick\": PropTypes.arrayOf(PropTypes.func)\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport mqtt from \"../mqtt\";\r\nimport DataView from \"./DataView\";\r\nimport ContextMenu from \"../ContextMenu\";\r\nimport \"./Label.css\";\r\n\r\nexport default class Label extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"data\": {},\r\n            \"format\": [],\r\n            \"text\": \"\",\r\n            \"ctxEv\": {},\r\n            \"edit\": false,\r\n            \"editText\": \"\"\r\n        };\r\n        this.handlePublish = this.handlePublish.bind(this);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n        this.handleFinishEdit = this.handleFinishEdit.bind(this);\r\n        this.handleEditChange = this.handleEditChange.bind(this);\r\n        this.handleEditCancel = this.handleEditCancel.bind(this);\r\n    }\r\n\r\n    clearData() {\r\n        Object.getOwnPropertyNames(this.state.data).forEach(topic => {\r\n            mqtt.unsubscribe(topic, this.handlePublish);\r\n        });\r\n    }\r\n\r\n    formatString(data, format) {\r\n        let str = \"\";\r\n        format.forEach((msg, i) => {\r\n            if (i % 2) {\r\n                if (data[msg]) {\r\n                    str += data[msg];\r\n                } else {\r\n                    str += \"?\";\r\n                }\r\n            } else {\r\n                str += msg;\r\n            }\r\n        });\r\n        return str;\r\n    }\r\n\r\n    updateData() {\r\n        let topics = [];\r\n        let format = [];\r\n        let str = this.props.data;\r\n        while (str.length > 0) {\r\n            let idx = str.indexOf(\"{\");\r\n            if (idx < 0) {\r\n                format.push(str);\r\n                break;\r\n            }\r\n            format.push(str.substr(0, idx));\r\n            str = str.substr(idx + 1);\r\n            idx = str.indexOf(\"}\");\r\n            let topic = str.substr(0, idx);\r\n            topics.push(topic);\r\n            format.push(topic);\r\n            str = str.substr(idx + 1);\r\n        }\r\n        topics.forEach(topic => {\r\n            mqtt.subscribe(topic, this.handlePublish);\r\n        });\r\n        this.setState({\r\n            \"data\": {},\r\n            \"format\": format,\r\n            \"text\": this.formatString({}, format)\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateData();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n            this.clearData();\r\n            this.updateData();\r\n        }\r\n    }\r\n\r\n    handlePublish(msg, topic) {\r\n        let data = this.state.format;\r\n        data[topic] = msg;\r\n        this.setState({\r\n            \"data\": data,\r\n            \"text\": this.formatString(data, this.state.format)\r\n        });\r\n    }\r\n\r\n    handleContextMenu(ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            \"ctxEv\": {\r\n                \"clientX\": ev.clientX,\r\n                \"clientY\": ev.clientY,\r\n                \"ev\": ev\r\n            }\r\n        });\r\n    }\r\n\r\n    handleEditClick() {\r\n        this.setState({\r\n            \"edit\": true,\r\n            \"editText\": this.props.data\r\n        });\r\n    }\r\n\r\n    handleDeleteClick() {\r\n        if (this.props.onDelete) {\r\n            this.props.onDelete();\r\n        }\r\n    }\r\n\r\n    handleFinishEdit() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n        if (this.props.onDataChange) {\r\n            this.props.onDataChange(this.state.editText);\r\n        }\r\n    }\r\n\r\n    handleEditChange(ev) {\r\n        this.setState({\r\n            \"editText\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleEditCancel() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataView left={this.props.left} right={this.props.right} top={this.props.top} bottom={this.props.bottom} onResize={this.props.onResize} onContextMenu={this.handleContextMenu}>\r\n                {this.state.edit ? (\r\n                    <div className=\"label-edit-container\">\r\n                        <textarea className=\"label-edit-area\" value={this.state.editText} onChange={this.handleEditChange} />\r\n                        <ContextMenu event={this.state.ctxEv} elements={[\r\n                            \"Save\",\r\n                            \"Cancel\",\r\n                            \"Delete\"\r\n                        ]} onClick={[\r\n                            this.handleFinishEdit,\r\n                            this.handleEditCancel,\r\n                            this.handleDeleteClick\r\n                        ]}></ContextMenu>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        {this.state.text.split(\"\\n\").map((x, i) => (\r\n                            <p className=\"label\" key={i}>{x}</p>\r\n                        ))}\r\n                        <ContextMenu event={this.state.ctxEv} elements={[\r\n                            \"Edit Text\",\r\n                            \"Delete\"\r\n                        ]} onClick={[\r\n                            this.handleEditClick,\r\n                            this.handleDeleteClick\r\n                        ]} />\r\n                    </div>\r\n                )}\r\n            </DataView>\r\n        );\r\n    }\r\n}\r\n\r\nLabel.propTypes = {\r\n    \"data\": PropTypes.string.isRequired,\r\n    \"left\": PropTypes.number.isRequired,\r\n    \"right\": PropTypes.number.isRequired,\r\n    \"top\": PropTypes.number.isRequired,\r\n    \"bottom\": PropTypes.number.isRequired,\r\n    \"onResize\": PropTypes.func,\r\n    \"onDelete\": PropTypes.func,\r\n    \"onDataChange\": PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport smoothie from \"smoothie\";\r\nimport mqtt from \"../mqtt\";\r\nimport DataView from \"./DataView\";\r\nimport \"./Graph.css\";\r\nimport ContextMenu from \"../ContextMenu\";\r\n\r\nexport default class Graph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"ctxEv\": {},\r\n            \"edit\": false,\r\n            \"editText\": \"\"\r\n        };\r\n        this.handlePublish = this.handlePublish.bind(this);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n        this.handleFinishEdit = this.handleFinishEdit.bind(this);\r\n        this.handleEditChange = this.handleEditChange.bind(this);\r\n        this.handleEditCancel = this.handleEditCancel.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.data.length > 0) {\r\n            mqtt.subscribe(this.props.data, this.handlePublish);\r\n        }\r\n        this.baseTime = new Date();\r\n        this.data = new smoothie.TimeSeries();\r\n        let chart = new smoothie.SmoothieChart({\r\n            \"responsive\": true\r\n        });\r\n        chart.addTimeSeries(this.data, {\r\n            \"strokeStyle\": \"#00FF00\",\r\n            \"fillStyle\": \"rgba(0, 255, 0, 0.2)\",\r\n            \"lineWidth\": 1\r\n        });\r\n        chart.streamTo(this.canvas, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.data.length > 0) {\r\n            mqtt.unsubscribe(this.props.data, this.handlePublish);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n            if (prevProps.data.length > 0) {\r\n                mqtt.unsubscribe(prevProps.data, this.handlePublish);\r\n            }\r\n            if (this.props.data.length > 0) {\r\n                mqtt.subscribe(this.props.data, this.handlePublish);\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePublish(msg) {\r\n        this.data.append(new Date().getTime(), parseFloat(msg));\r\n    }\r\n\r\n    handleContextMenu(ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            \"ctxEv\": {\r\n                \"clientX\": ev.clientX,\r\n                \"clientY\": ev.clientY,\r\n                \"ev\": ev\r\n            }\r\n        });\r\n    }\r\n\r\n    handleEditClick() {\r\n        this.setState({\r\n            \"edit\": true,\r\n            \"editText\": this.props.data\r\n        });\r\n    }\r\n\r\n    handleDeleteClick() {\r\n        if (this.props.onDelete) {\r\n            this.props.onDelete();\r\n        }\r\n    }\r\n\r\n    handleFinishEdit() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n        if (this.props.onDataChange) {\r\n            this.props.onDataChange(this.state.editText);\r\n        }\r\n    }\r\n\r\n    handleEditChange(ev) {\r\n        this.setState({\r\n            \"editText\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleEditCancel() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataView left={this.props.left} right={this.props.right} top={this.props.top} bottom={this.props.bottom} onResize={this.props.onResize} onContextMenu={this.handleContextMenu}>\r\n                <div className=\"graph-container\">\r\n                    <canvas className=\"graph-canvas\" ref={el => this.canvas = el} />\r\n                    {this.state.edit ? (\r\n                        <div>\r\n                            <textarea value={this.state.editText} onChange={this.handleEditChange} />\r\n                            <ContextMenu event={this.state.ctxEv} elements={[\r\n                                \"Save\",\r\n                                \"Cancel\",\r\n                                \"Delete\"\r\n                            ]} onClick={[\r\n                                this.handleFinishEdit,\r\n                                this.handleEditCancel,\r\n                                this.handleDeleteClick\r\n                            ]} />\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <ContextMenu event={this.state.ctxEv} elements={[\r\n                                \"Edit Sensor\",\r\n                                \"Delete\"\r\n                            ]} onClick={[\r\n                                this.handleEditClick,\r\n                                this.handleDeleteClick\r\n                            ]} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </DataView>\r\n        );\r\n    }\r\n}\r\n\r\nGraph.propTypes = {\r\n    \"data\": PropTypes.string.isRequired,\r\n    \"left\": PropTypes.number.isRequired,\r\n    \"right\": PropTypes.number.isRequired,\r\n    \"top\": PropTypes.number.isRequired,\r\n    \"bottom\": PropTypes.number.isRequired,\r\n    \"onResize\": PropTypes.func,\r\n    \"onDelete\": PropTypes.func,\r\n    \"onDataChange\": PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport mqtt from \"../mqtt\";\r\nimport DataView from \"./DataView\";\r\nimport ContextMenu from \"../ContextMenu\";\r\nimport \"./Button.css\";\r\n\r\nexport default class Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"text\": \"\",\r\n            \"ctxEv\": {},\r\n            \"edit\": false,\r\n            \"editLabel\": \"\",\r\n            \"editTopic\": \"\",\r\n            \"editValue\": \"\"\r\n        };\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n        this.handleFinishEdit = this.handleFinishEdit.bind(this);\r\n        this.handleEditCancel = this.handleEditCancel.bind(this);\r\n        this.handleEditLabelChange = this.handleEditLabelChange.bind(this);\r\n        this.handleEditTopicChange = this.handleEditTopicChange.bind(this);\r\n        this.handleEditValueChange = this.handleEditValueChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleContextMenu(ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            \"ctxEv\": {\r\n                \"clientX\": ev.clientX,\r\n                \"clientY\": ev.clientY,\r\n                \"ev\": ev\r\n            }\r\n        });\r\n    }\r\n\r\n    handleEditClick() {\r\n        if (this.props.data.length > 0) {\r\n            let cfg = JSON.parse(this.props.data);\r\n            this.setState({\r\n                \"edit\": true,\r\n                \"editLabel\": cfg.label,\r\n                \"editTopic\": cfg.topic,\r\n                \"editValue\": cfg.value\r\n            });\r\n        } else {\r\n            this.setState({\r\n                \"edit\": true,\r\n                \"editLabel\": \"\",\r\n                \"editTopic\": \"\",\r\n                \"editValue\": \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDeleteClick() {\r\n        if (this.props.onDelete) {\r\n            this.props.onDelete();\r\n        }\r\n    }\r\n\r\n    handleFinishEdit() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n        if (this.props.onDataChange) {\r\n            this.props.onDataChange(JSON.stringify({\r\n                \"label\": this.state.editLabel,\r\n                \"topic\": this.state.editTopic,\r\n                \"value\": this.state.editValue\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleEditCancel() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n    }\r\n\r\n    handleEditLabelChange(ev) {\r\n        this.setState({\r\n            \"editLabel\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleEditTopicChange(ev) {\r\n        this.setState({\r\n            \"editTopic\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleEditValueChange(ev) {\r\n        this.setState({\r\n            \"editValue\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleClick() {\r\n        if (this.props.data.length > 0) {\r\n            let cfg = JSON.parse(this.props.data);\r\n            mqtt.publish(cfg.topic, cfg.value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataView left={this.props.left} right={this.props.right} top={this.props.top} bottom={this.props.bottom} onResize={this.props.onResize} onContextMenu={this.handleContextMenu}>\r\n                {this.state.edit ? (\r\n                    <div className=\"button-edit-container\">\r\n                        <form action=\"#\">\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"label\">Label:</label>\r\n                                <input name=\"label\" type=\"text\" required value={this.state.editLabel} onChange={this.handleEditLabelChange} />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"topic\">Topic:</label>\r\n                                <input name=\"topic\" type=\"text\" required value={this.state.editTopic} onChange={this.handleEditTopicChange} />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"value\">Payload:</label>\r\n                                <input name=\"value\" type=\"text\" required value={this.state.editValue} onChange={this.handleEditValueChange} />\r\n                            </div>\r\n                        </form>\r\n                        <ContextMenu event={this.state.ctxEv} elements={[\r\n                            \"Save\",\r\n                            \"Cancel\",\r\n                            \"Delete\"\r\n                        ]} onClick={[\r\n                            this.handleFinishEdit,\r\n                            this.handleEditCancel,\r\n                            this.handleDeleteClick\r\n                        ]}></ContextMenu>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"button-view\" onClick={this.handleClick}>\r\n                        {this.props.data.length > 0 && JSON.parse(this.props.data).label.split(\"\\n\").map((x, i) => (\r\n                            <p key={i}>{x}</p>\r\n                        ))}\r\n                        <ContextMenu event={this.state.ctxEv} elements={[\r\n                            \"Edit Text\",\r\n                            \"Delete\"\r\n                        ]} onClick={[\r\n                            this.handleEditClick,\r\n                            this.handleDeleteClick\r\n                        ]} />\r\n                    </div>\r\n                )}\r\n            </DataView>\r\n        );\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    \"data\": PropTypes.string.isRequired,\r\n    \"left\": PropTypes.number.isRequired,\r\n    \"right\": PropTypes.number.isRequired,\r\n    \"top\": PropTypes.number.isRequired,\r\n    \"bottom\": PropTypes.number.isRequired,\r\n    \"onResize\": PropTypes.func,\r\n    \"onDelete\": PropTypes.func,\r\n    \"onDataChange\": PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport Label from \"./dataviews/Label\";\r\nimport Graph from \"./dataviews/Graph\";\r\nimport mqtt from \"./mqtt\";\r\nimport \"./MainContainer.css\";\r\nimport ContextMenu from \"./ContextMenu\";\r\nimport Button from \"./dataviews/Button\";\r\nimport TextInput from \"./dataviews/TextInput\";\r\n\r\nconst components = {\r\n    \"Label\": Label,\r\n    \"Graph\": Graph,\r\n    \"Button\": Button,\r\n    \"Textbox\": TextInput\r\n};\r\n\r\nconst PUBLISH_IGNORE = 5000;\r\n\r\nexport default class MainContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"components\": [],\r\n            \"ctxEv\": {}\r\n        };\r\n        this.handlePublish = this.handlePublish.bind(this);\r\n        this.lastPublish = new Date(0);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        mqtt.subscribe(\"rocket_view/display_config\", this.handlePublish);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        mqtt.unsubscribe(\"rocket_view/display_config\", this.handlePublish);\r\n    }\r\n\r\n    handlePublish(msg) {\r\n        if (new Date() - this.lastPublish > PUBLISH_IGNORE) {\r\n            this.setState({\r\n                \"components\": JSON.parse(msg)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleResize(cid, left, right, top, bottom) {\r\n        let comps = this.state.components;\r\n        comps[cid].size = {\r\n            \"left\": left,\r\n            \"right\": right,\r\n            \"top\": top,\r\n            \"bottom\": bottom\r\n        };\r\n        this.setState({\r\n            \"components\": comps\r\n        });\r\n        this.lastPublish = new Date();\r\n        mqtt.publish(\"rocket_view/display_config/set\", JSON.stringify(comps));\r\n    }\r\n\r\n    handleDelete(cid) {\r\n        let comps = this.state.components;\r\n        comps.splice(cid, 1);\r\n        this.setState({\r\n            \"components\": comps\r\n        });\r\n        this.lastPublish = new Date();\r\n        mqtt.publish(\"rocket_view/display_config/set\", JSON.stringify(comps));\r\n    }\r\n\r\n    handleDataChange(cid, data) {\r\n        let comps = this.state.components;\r\n        comps[cid].data = data;\r\n        this.setState({\r\n            \"components\": comps\r\n        });\r\n        this.lastPublish = new Date();\r\n        mqtt.publish(\"rocket_view/display_config/set\", JSON.stringify(comps));\r\n    }\r\n\r\n    handleContextMenu(ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            \"ctxEv\": {\r\n                \"clientX\": ev.clientX,\r\n                \"clientY\": ev.clientY,\r\n                \"ev\": ev\r\n            }\r\n        });\r\n    }\r\n\r\n    handleAddClick(type) {\r\n        let x = Math.round(32 * this.state.ctxEv.clientX / document.body.clientWidth);\r\n        let y = Math.round(18 * this.state.ctxEv.clientY / document.body.clientHeight);\r\n        let comps = this.state.components;\r\n        comps.push({\r\n            \"type\": type,\r\n            \"size\": {\r\n                \"left\": x,\r\n                \"right\": 32 - x - 3,\r\n                \"top\": y,\r\n                \"bottom\": 18 - y - 2\r\n            },\r\n            \"data\": \"\"\r\n        });\r\n        this.setState({\r\n            \"components\": comps\r\n        });\r\n        this.lastPublish = new Date();\r\n        mqtt.publish(\"rocket_view/display_config/set\", JSON.stringify(comps));\r\n    }\r\n\r\n    render() {\r\n        let grid = [];\r\n        for (let x = 1; x < 32; ++x) {\r\n            for (let y = 1; y < 18; ++y) {\r\n                grid.push((\r\n                    <div className=\"grid-dot\" key={`grid-${x}-${y}`} style={{\r\n                        \"left\": `${100*x/32}vw`,\r\n                        \"top\": `${100*y/18}vh`\r\n                    }} />\r\n                ));\r\n            }\r\n        }\r\n        let comps = [];\r\n        this.state.components.forEach((comp, i) => {\r\n            let Component = components[comp.type];\r\n            comps.push((\r\n                <Component key={`comp-${i}`} data={comp.data}\r\n                    left={comp.size.left} right={comp.size.right} top={comp.size.top} bottom={comp.size.bottom}\r\n                    onResize={this.handleResize.bind(this, i)} onDelete={this.handleDelete.bind(this, i)} onDataChange={this.handleDataChange.bind(this, i)} />\r\n            ));\r\n        });\r\n        return (\r\n            <div className=\"main\" onContextMenu={this.handleContextMenu}>\r\n                {grid}\r\n                {comps}\r\n                <ContextMenu event={this.state.ctxEv} elements={Object.getOwnPropertyNames(components).map(e => `Add ${e}`)}\r\n                    onClick={Object.getOwnPropertyNames(components).map(e => this.handleAddClick.bind(this, e))} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport mqtt from \"../mqtt\";\r\nimport DataView from \"./DataView\";\r\nimport \"./TextInput.css\";\r\nimport ContextMenu from \"../ContextMenu\";\r\n\r\nconst PUBLISH_IGNORE = 5000;\r\n\r\nexport default class TextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"text\": \"\",\r\n            \"ctxEv\": {},\r\n            \"edit\": false,\r\n            \"editText\": \"\"\r\n        };\r\n        this.lastPublish = new Date(0);\r\n        this.handlePublish = this.handlePublish.bind(this);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n        this.handleFinishEdit = this.handleFinishEdit.bind(this);\r\n        this.handleEditChange = this.handleEditChange.bind(this);\r\n        this.handleEditCancel = this.handleEditCancel.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.data.length > 0) {\r\n            mqtt.subscribe(this.props.data, this.handlePublish);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.data.length > 0) {\r\n            mqtt.unsubscribe(this.props.data, this.handlePublish);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n            if (prevProps.data.length > 0) {\r\n                mqtt.unsubscribe(prevProps.data, this.handlePublish);\r\n            }\r\n            if (this.props.data.length > 0) {\r\n                mqtt.subscribe(this.props.data, this.handlePublish);\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePublish(msg) {\r\n        if (new Date() - this.lastPublish > PUBLISH_IGNORE) {\r\n            this.setState({\r\n                \"text\": msg\r\n            });\r\n        }\r\n    }\r\n\r\n    handleContextMenu(ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            \"ctxEv\": {\r\n                \"clientX\": ev.clientX,\r\n                \"clientY\": ev.clientY,\r\n                \"ev\": ev\r\n            }\r\n        });\r\n    }\r\n\r\n    handleEditClick() {\r\n        this.setState({\r\n            \"edit\": true,\r\n            \"editText\": this.props.data\r\n        });\r\n    }\r\n\r\n    handleDeleteClick() {\r\n        if (this.props.onDelete) {\r\n            this.props.onDelete();\r\n        }\r\n    }\r\n\r\n    handleFinishEdit() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n        if (this.props.onDataChange) {\r\n            this.props.onDataChange(this.state.editText);\r\n        }\r\n    }\r\n\r\n    handleEditChange(ev) {\r\n        this.setState({\r\n            \"editText\": ev.target.value\r\n        });\r\n    }\r\n\r\n    handleEditCancel() {\r\n        this.setState({\r\n            \"edit\": false\r\n        });\r\n    }\r\n\r\n    handleChange(ev) {\r\n        this.setState({\r\n            \"text\": ev.target.value\r\n        });\r\n        if (this.props.data.length > 0) {\r\n            this.lastPublish = new Date();\r\n            mqtt.publish(this.props.data, ev.target.value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataView left={this.props.left} right={this.props.right} top={this.props.top} bottom={this.props.bottom} onResize={this.props.onResize} onContextMenu={this.handleContextMenu}>\r\n                {this.state.edit ? (\r\n                    <div className=\"text-input-container\">\r\n                        <textarea className=\"text-input-area\" value={this.state.editText} onChange={this.handleEditChange} />\r\n                        <ContextMenu event={this.state.ctxEv} elements={[\r\n                            \"Save\",\r\n                            \"Cancel\",\r\n                            \"Delete\"\r\n                        ]} onClick={[\r\n                            this.handleFinishEdit,\r\n                            this.handleEditCancel,\r\n                            this.handleDeleteClick\r\n                        ]}></ContextMenu>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"text-input-container\">\r\n                        <textarea className=\"text-input-area\" value={this.state.text} onChange={this.handleChange} />\r\n                        <ContextMenu event={this.state.ctxEv} elements={[\r\n                            \"Edit Topic\",\r\n                            \"Delete\"\r\n                        ]} onClick={[\r\n                            this.handleEditClick,\r\n                            this.handleDeleteClick\r\n                        ]} />\r\n                    </div>\r\n                )}\r\n            </DataView>\r\n        );\r\n    }\r\n}\r\n\r\nTextInput.propTypes = {\r\n    \"data\": PropTypes.string.isRequired,\r\n    \"left\": PropTypes.number.isRequired,\r\n    \"right\": PropTypes.number.isRequired,\r\n    \"top\": PropTypes.number.isRequired,\r\n    \"bottom\": PropTypes.number.isRequired,\r\n    \"onResize\": PropTypes.func,\r\n    \"onDelete\": PropTypes.func,\r\n    \"onDataChange\": PropTypes.func\r\n};\r\n","import React from \"react\";\nimport Connect from \"./Connect\";\nimport MainContainer from \"./MainContainer\";\nimport mqtt from \"./mqtt\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"connected\": false\n        };\n        this.handleConnect = this.handleConnect.bind(this);\n    }\n\n    componentDidMount() {\n        mqtt.addConnectListener(this.handleConnect);\n    }\n\n    componentWillUnmount() {\n        mqtt.removeConnectListener(this.handleConnect);\n    }\n\n    handleConnect() {\n        this.setState({\n            \"connected\": true\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                {this.state.connected ? <MainContainer /> : <Connect />}\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nexport const isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (!serviceWorker.isLocalhost) {\n    serviceWorker.register();\n}\n"],"sourceRoot":""}